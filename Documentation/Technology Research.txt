Jenkins
-Jenkins plugins
- REST API resulting in XML/JSON/Python
-Internal Data model stored as a tree, API calls return a subtree, subtree cuts off at a certain point, this point can be adjusted.

_________________________________________________________________________________________

RTC
https://jazz.net/downloads/rational-team-concert/releases/4.0?p=allDownloads
-RTC API?
Javadoc - https://jazz.net/downloads/rational-team-concert/releases/4.0/RTC-Client-plainJavaLib-API-javadoc-4.0.zip
Using RTC - https://www.youtube.com/watch?feature=player_embedded&v=8SippiZJqqQ

-https://www.youtube.com/watch?v=X7nrHC9YO4Y
-Planning
--Documentation
--Estimates
--Widgets/Dashboard??
--Change Requests
----Delegation
--Work Items
--Build
----Test
----History
--SCM
----Role Based (privileges useable in dashboard?)

Streams - Projects/team areas
Components - User/Project/team areas

_________________________________________________________________________________________

Continuous Delivery Dashboards
-Continuous Delivery in the Cloud â€“ Part 6: Create a Dashboard of your System
https://blog.codecentric.de/en/2012/06/continuous-delivery-in-the-cloud-part6-create-a-dashbord-of-your-system/

_________________________________________________________________________________________

Python - https://pypi.python.org/pypi/jenkinsapi
-JenkinsAPI
--Query the test-results of a completed build
--Get objects representing the latest builds of a job
--Search for artifacts by simple criteria
--Block until jobs are complete
--Install artifacts to custom-specified directory structures
--username/password auth support for jenkins instances with auth turned on
--Ability to search for builds by subversion revision
--Ability to add/remove/query jenkins slaves
_________________________________________________________________________________________

Ruby - https://rubygems.org/gems/jenkins_api_client
-JenkinsAPI
--Creating jobs by sending xml file or by specifying params as options with more customization options including source control, notifications, etc.
--Building jobs (with params), stopping builds, querying details of recent builds, obtaining build params, etc.
--Listing jobs available in Jenkins with job name filter, job status filter.
--Adding/removing downstream projects.
--Chaining jobs i.e given a list of projects each project is added as a downstream project to the previous one.
--Obtaining progressive console output.
--Username/password based authentication.
--Command Line Interface with a lot of options provided in the libraries.--Creating, listing views.
--Adding jobs to views and removing jobs from views.
--Adding/removing jenkins slaves, querying details of slaves.
-Obtaining the tasks in build queue, and their age, cause, reason, ETA, ID, params and much more.
--Quiet down, cancel quiet down, safe restart, force restart, and wait till Jenkins becomes available after a restart.

_________________________________________________________________________________________

Knockout.js - http://knockoutjs.com/index.html
	-Data-binding library
	-Bind variables in the View Model (DOM)
	-Observable Arrays
	-Model View View Model (MVVM) Pattern
	-shallower learning curve when compared to angular/backbone
	-Becomes complicated when you want to do things that are not supported out of the box
	- No IDE plugin
_________________________________________________________________________________________

Angular.js - http://angularjs.org/
	- Full Framework
	- Useful for Data Driven applications, nice data binding
	- JQuery or JQueryLite dependant
	- Offers similar data binding to knockout, but also controllers and sets of services
	- Dependancy injection is used quite a lot
		- Name function arguments with the same name
	- Steep learning curve for more advanced features
	- Popular
	- Supports automatic testing out of the box
	- IntelliJ plugin/VisualStudio plugin
		- Angular Batarang plugin for Google Chrome developer tools
	- Large support community
	
_________________________________________________________________________________________

backbone.js - http://backbonejs.org/
	- Useful for heavy DOM manipulation (With JQuery)
	- Key-value binding and custom events
		-Not Data binding
		-Build own MVC solution using backbone objects
	- Faster than Angular/Knockout (http://jsperf.com/angular-vs-knockout-vs-ember/171)
	- A lot of boilerplate (code for wiring things together)
		- Free with Angular/Knockout
		- Code easier to read (less 'magic')
		- No surprises
	- Need understanding of how Backbones set of objects work together
	- Useful for specialised applications
		
_________________________________________________________________________________________


node.js - http://nodejs.org/
	-Networking
Push updates from the server to the client without having to poll or refresh?
-Polling?

_________________________________________________________________________________________

d3.js - http://d3js.org/
Data visualisation
_________________________________________________________________________________________

Grunt.js -  http://gruntjs.com/
	- Task runner
	- Automate repetitive tasks
_________________________________________________________________________________________
 
Karma runner - http://karma-runner.github.io/0.10/index.html
	- Test Runner
	- Spawns a web server and executes source and test code for each browser connected
	- Results displayed via command line
	
_________________________________________________________________________________________

Jasmine Test Framework
_________________________________________________________________________________________

Java Spring
_________________________________________________________________________________________

Webstorm IDE
_________________________________________________________________________________________

MongoDb
	- Store Results of Jenkins queries for analysis of team improvements etc.?
	- Document-orientated Database
	- NoSQL
_________________________________________________________________________________________

Test environments?
-cloud based?
--HP? AWS?
_________________________________________________________________________________________
