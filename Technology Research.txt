Jenkins
-Jenkins plugins
- REST API resulting in XML/JSON/Python
-Internal Data model stored as a tree, API calls return a subtree, subtree cuts off at a certain point, this point can be adjusted.

_________________________________________________________________________________________

RTC
https://jazz.net/downloads/rational-team-concert/releases/4.0?p=allDownloads
-RTC API?
Javadoc - https://jazz.net/downloads/rational-team-concert/releases/4.0/RTC-Client-plainJavaLib-API-javadoc-4.0.zip
Using RTC - https://www.youtube.com/watch?feature=player_embedded&v=8SippiZJqqQ

-https://www.youtube.com/watch?v=X7nrHC9YO4Y
-Planning
--Documentation
--Estimates
--Widgets/Dashboard??
--Change Requests
----Delegation
--Work Items
--Build
----Test
----History
--SCM
----Role Based (privileges useable in dashboard?)

Streams - Projects/team areas
Components - User/Project/team areas

_________________________________________________________________________________________

Continuous Delivery Dashboards
-Continuous Delivery in the Cloud â€“ Part 6: Create a Dashboard of your System
https://blog.codecentric.de/en/2012/06/continuous-delivery-in-the-cloud-part6-create-a-dashbord-of-your-system/

_________________________________________________________________________________________

Python - https://pypi.python.org/pypi/jenkinsapi
-JenkinsAPI
--Query the test-results of a completed build
--Get objects representing the latest builds of a job
--Search for artifacts by simple criteria
--Block until jobs are complete
--Install artifacts to custom-specified directory structures
--username/password auth support for jenkins instances with auth turned on
--Ability to search for builds by subversion revision
--Ability to add/remove/query jenkins slaves
_________________________________________________________________________________________

Ruby - https://rubygems.org/gems/jenkins_api_client
-JenkinsAPI
--Creating jobs by sending xml file or by specifying params as options with more customization options including source control, notifications, etc.
--Building jobs (with params), stopping builds, querying details of recent builds, obtaining build params, etc.
--Listing jobs available in Jenkins with job name filter, job status filter.
--Adding/removing downstream projects.
--Chaining jobs i.e given a list of projects each project is added as a downstream project to the previous one.
--Obtaining progressive console output.
--Username/password based authentication.
--Command Line Interface with a lot of options provided in the libraries.--Creating, listing views.
--Adding jobs to views and removing jobs from views.
--Adding/removing jenkins slaves, querying details of slaves.
-Obtaining the tasks in build queue, and their age, cause, reason, ETA, ID, params and much more.
--Quiet down, cancel quiet down, safe restart, force restart, and wait till Jenkins becomes available after a restart.

_________________________________________________________________________________________

knockout.js - http://knockoutjs.com/index.html

_________________________________________________________________________________________

angular.js - http://angularjs.org/
_________________________________________________________________________________________

backbone.js - http://backbonejs.org/
_________________________________________________________________________________________


node.js - http://nodejs.org/
Push updates from the server to the client without having to poll or refresh?
-Polling?

_________________________________________________________________________________________

d3.js - http://d3js.org/
Data visualisation

_________________________________________________________________________________________

Java Spring
_________________________________________________________________________________________

Test environments?
-cloud based?
--HP? AWS?
_________________________________________________________________________________________

Requirements
Transformation Checkpoint                             
                                                      
                           Each code submission       
                           triggers the pipeline in   
                           serial                     
                                                      
                                                      
                           Jenkins provides CI        
                           pipeline                   
                                                      
                                                      
                           CI pipeline is fully       
                           automated                  
                                                      
                                                      
                           Single source              
                           repository/trunk           
                                                      
                                                      
                           All artifacts kept in      
                           version control            
                                                      
                                                      
                           All Commit Phase failures  
                           stop the pipeline          
                                                      
                                                      
                           SPRs add data to track test
                           escapes                    
                                                      
CI pipeline is implemented                            
                           Leverage common metrics    
                           repository and dashboard   
                                                      
                                                      
                           Push-button automated      
                           pre-submission validation  
                                                      
                                                      
                           All new code is code       
                           reviewed                   
                                                      
                                                      
                           All new code has unit and  
                           functional test coverage   
                                                      
                                                      
                           Automated tests added for  
                           all resolved SPRs          
                                                      
Developer role and enablement                         
                           SPRs created for all issues
                           outside of the Commit Phase
                                                      
                                                      
                           All test deployments use   
                           production deployment      
                           processes and are fully    
                           automated/repeatable       
                                                      
                                                      
                           All test deployments use   
                           production-congruent       
                           environments/stacks        
                                                      
                                                      
                           Full                       
                           regression/compatibility   
                           testing of APIs and        
                           extensions                 
                                                      
                                                      
                           Simian Army testing occurs 
                           continuously               
                                                      
                                                      
                           Dashboard metrics gathering
                           is automated               
                                                      
                                                      
                           Continuous on-premises     
                           testing (NFR and on-prem   
                           only features)             
                                                      
                                                      
                           Zero downtime updates      
                                                      
Continuous delivery                                   
                           Additional SCSB            
                           usage/defect metrics stored
                           in repository              
                                                      
                                                      
CD Transformation Metrics                             
                                                      
Phase                                                 
                           Metric                     
                                   Measurement Value  
Commit Phase                                          
                           Build Duration             
                                   Minutes            
                                                      
                           Manual testing duration    
                           (automatable)              
                                   Person Weeks       
Acceptance Test Phase                                 
                           API Test Coverage (via     
                           automated measurement)     
                                   % Value            
Manual Test Phase                                     
                           Manual testing duration    
                           (non-automatable)          
                                   Person Weeks       
                                                      
                           Time from final code       
                           submission to production   
                           (Cloud)                    
                                   Days               
                                                      
                           Time from final code       
                           submission to GA           
                           (On-Premises)              
                                   Days               
                                                      
                           SPRs opened per capita     
                           (general quality measure)  
                                   Number             
CD Business Value                                     
                           Cumulative open+deferred   
                           defects (technical debt)   
                                   Number      